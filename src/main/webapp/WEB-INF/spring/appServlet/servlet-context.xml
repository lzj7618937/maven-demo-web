<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven conversion-service="conversionService"
		enable-matrix-variables="true">
		<argument-resolvers>
			<beans:bean
				class="org.springframework.samples.mvc.data.custom.CustomArgumentResolver" />
		</argument-resolvers>
		<async-support default-timeout="3000">
			<callable-interceptors>
				<beans:bean
					class="org.springframework.samples.mvc.async.TimeoutCallableProcessingInterceptor" />
			</callable-interceptors>
		</async-support>
	</annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 错误路径和错误页面，注意指定viewResolver -->
	<view-controller path="/404" view-name="view/error/404" />
	<view-controller path="/500" view-name="view/error/500" />

	<!-- 对返回类型做JSON转换，可参考 ：http://json20080301.iteye.com/blog/1881191 -->
	<annotation-driven>
		<message-converters register-defaults="true">
			<beans:bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
				p:supportedMediaTypes="application/json;charset=UTF-8">
				<beans:property name="objectMapper">
					<beans:bean class="com.maven.demo.web.filter.ObjectMappingCustomer"></beans:bean>
				</beans:property>
			</beans:bean>
		</message-converters>
	</annotation-driven>

	<interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<beans:bean class="com.maven.demo.web.interceptor.HandlerUserInterceptor" />
	</interceptors>

	<!-- Only needed because we install custom converters to support the examples 
		in the org.springframewok.samples.mvc.convert package -->
	<beans:bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="formatters">
			<beans:bean
				class="org.springframework.samples.mvc.convert.MaskFormatAnnotationFormatterFactory" />
		</beans:property>
	</beans:bean>

	<!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload 
		package -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="spring-thymeleaf.xml" />
	<beans:import resource="spring-hibernate.xml" />
	<beans:import resource="controllers.xml" />

	<!-- 默认的注解映射的支持 -->
	<task:annotation-driven />

</beans:beans>
