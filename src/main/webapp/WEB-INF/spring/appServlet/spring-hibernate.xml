<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        ">

	<!-- Hibernate4 -->
	<!-- 加载资源文件 其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载 -->
	<context:property-placeholder location="classpath:persistence-mysql.properties" />


    <!-- **************************************************************** -->
    <!-- MESSAGE EXTERNALIZATION/INTERNATIONALIZATION -->
    <!-- Standard Spring MessageSource implementation -->
    <!-- 国际化的消息资源文件 -->
    <!-- **************************************************************** -->
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="Messages"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>

	<!-- 数据库映射 -->
	<!-- class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" -->
	<!-- class="org.springframework.jdbc.datasource.DriverManagerDataSource" -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.pass}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 可以加多个包 -->
		<property name="packagesToScan">
			<list>
				<value>com.maven.demo.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<!-- 设置数据库方言 -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- 是否在控制台显示sql -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>

				<!-- 设置自动创建|更新|验证数据库表结构 -->
				<!-- prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop-->
				<!-- 是否格式化sql，优化显示 -->
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!-- 数据库批量查询最大数 -->
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<!-- 数据库批量更新、添加、删除操作最大数 -->
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<!-- 是否自动提交事务 -->
				<prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
				<!-- 指定hibernate在何时释放JDBC连接 -->
				<prop key="hibernate.connection.release_mode">${hibernate.connection.release_mode}</prop>

				<!-- javax.persistence.validation.mode默认情况下是auto的，就是说如果不设置的话它是会自动去你的classpath下面找一个bean-validation**包 
					所以把它设置为none即可 -->
				<prop key="javax.persistence.validation.mode">${javax.persistence.validation.mode}</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>

				<!-- 创建session方式 hibernate4.x 的方式 -->
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}
				</prop>

				<!-- 是否开启二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<!-- 是否开启查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}
				</prop>
				<prop key="hibernate.cache.use_structured_entries">${hibernate.cache.use_structured_entries}</prop>

			</props>
		</property>
	</bean>

	<!-- 配置Hibernate事务管理器 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 配置事务异常封装 -->
	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- 开启AOP监听 只对当前配置文件有效 -->
    <!-- <aop:aspectj-autoproxy expose-proxy="true" />-->

    <!-- 开启注解事务 只对当前配置文件有效 -->
	<tx:annotation-driven transaction-manager="txManager" />


</beans>